---
apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: destination
spec:
  replicas: 3
  image:
    application: confluentinc/cp-zookeeper-operator:6.1.0.0
    init: confluentinc/cp-init-container-operator:6.1.0.0
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: destination
spec:
  replicas: 3
  configOverrides:
    server:
      - auto.create.topics.enable=true
  image:
    application: confluentinc/cp-server-operator:6.1.0.0
    init: confluentinc/cp-init-container-operator:6.1.0.0
  dataVolumeCapacity: 10Gi
  metricReporter:
    enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: destination
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server-connect-operator:6.1.0.0
    init: confluentinc/cp-init-container-operator:6.1.0.0
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071

---
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  name: ksqldb
  namespace: destination
spec:
  replicas: 1
  image:
    application: confluentinc/cp-ksqldb-server-operator:6.1.0.0
    init: confluentinc/cp-init-container-operator:6.1.0.0
  dataVolumeCapacity: 10Gi
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: destination
spec:
  replicas: 1
  configOverrides:
    server:
      - auto.create.topics.enable=true
  image:
    application: confluentinc/cp-enterprise-control-center-operator:6.1.0.0
    init: confluentinc/cp-init-container-operator:6.1.0.0
  dataVolumeCapacity: 10Gi
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
    ksqldb:
      - name: ksqldb
        url: http://ksqldb.confluent.svc.cluster.local:8088
    connect:
      - name: connect
        url: http://connect.confluent.svc.cluster.local:8083
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: destination
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry-operator:6.1.0.0
    init: confluentinc/cp-init-container-operator:6.1.0.0
---
apiVersion: platform.confluent.io/v1beta1
# Confluent Replicator is built as a connector, and so will use the `Connect` CRD.
kind: Connect
metadata:
  name: replicator
  namespace: destination
spec:
  replicas: 1
  image:
    # Use the `cp-enterprise-replicator-operator` Docker image, that contains the Replicator jars
    application: confluentinc/cp-enterprise-replicator-operator:6.1.1.0
    init: confluentinc/cp-init-container-operator:6.1.1.0
  podTemplate:
    resources:
      requests:
        cpu: 1
        memory: 2Gi
    envVars:
      - name: CLASSPATH
        value: /usr/share/java/kafka-connect-replicator/replicator-rest-extension-6.1.1.jar
  configOverrides:
    server:
      - rest.extension.classes=io.confluent.connect.replicator.monitoring.ReplicatorMonitoringExtension
      - connector.class=io.confluent.connect.replicator.ReplicatorSourceConnector
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.destination.svc.cluster.local:9092
    interceptor:
      enabled: true
